<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="HeaderLabelStyle">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    </Style>

    <!--MahApps.Metro SquareButtonStyle case insensitive content-->
    <Style x:Key="SquareButtonStyleCI"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                          Storyboard.TargetName="MouseOverBorder">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                                                     Value="2" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                          Storyboard.TargetName="MouseOverBorder">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                                                     Value="0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                          Storyboard.TargetName="PressedBorder">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                                                     Value="2" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{DynamicResource BlackBrush}"
                                BorderThickness="2"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{DynamicResource GrayBrush8}"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{DynamicResource BlackBrush}"
                                Opacity="0"
                                BorderBrush="{DynamicResource BlackBrush}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          OpacityMask="{x:Null}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MahApps.Metro AccentedSquareButtonStyle case insensitive content-->
    <Style x:Key="AccentedSquareButtonStyleCI"
           BasedOn="{StaticResource SquareButtonStyleCI}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource IdealForegroundColorBrush}" />
    </Style>

    <Style TargetType="{x:Type TabControl}"
           x:Key="SimpleMetroTabControl">
            <Setter Property="Background"
                Value="{x:Null}" />
            <Setter Property="BorderBrush"
                Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  IsItemsHost="true"
                                  Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1"
                                  Panel.ZIndex="1" />
                            <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="1" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="Auto" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,0,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Left">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="1" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="Auto" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,2,0,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement"
                                 Value="Right">
                                <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0" />
                                <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="1" />
                                <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="0" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="*" />
                                <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="Auto" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                                <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                                <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="0,2,2,2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <Style TargetType="TabItem"
           x:Key="SimpleMetroTabItem">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <!-- special property for header font size -->
        <Setter Property="Controls:ControlsHelper.HeaderFontSize"
                Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border"
                            Margin="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter x:Name="ContentSite"
                                          Margin="2,1,2,1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.FontSize="16"
                                          TextElement.FontStretch="{TemplateBinding Controls:ControlsHelper.HeaderFontStretch}"
                                          TextElement.FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="false">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource GrayNormalBrush}" />
                        </Trigger>
                        <Trigger SourceName="ContentSite"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource GrayHoverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroBaseWindowButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource SemiTransparentWhiteBrush}" />
            </Trigger>
            
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- default button style for min, max and close window buttons -->
    <Style x:Key="MetroWindowButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MetroBaseWindowButtonStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Width"
                Value="34" />
        <Setter Property="MaxHeight"
                Value="34" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <VisualBrush x:Key="SettingsIconVisualBrush" 
                 Stretch="Uniform"
                 Visual="{StaticResource appbar_settings}" 
                 />

    <VisualBrush x:Key="AboutIconVisualBrush" 
                 Stretch="Uniform"
                 Visual="{StaticResource appbar_information}" 
                 />

    <VisualBrush x:Key="UpdateFoundIconVisualBrush" 
                 Stretch="Uniform"
                 Visual="{StaticResource appbar_arrow_up}" 
                 />

    <VisualBrush x:Key="NoNotificationsVisualBrush"
                 Stretch="Uniform"
                 Visual="{StaticResource appbar_flag}"
                 />

    <VisualBrush x:Key="NewNotificationIndicatorBrush"
                 Stretch="Uniform"
                 Visual="{DynamicResource appbar_moon_red}" 
                 />

    <Canvas x:Key="appbar_moon_red" Width="75.9905" Height="75.9905" Clip="F1 M 0,0L 75.9905,0L 75.9905,75.9905L 0,75.9905L 0,0">
        <Ellipse Width="44.3278" Height="44.3278" Canvas.Left="15.8313" Canvas.Top="15.8312" Stretch="Fill" Fill="Red"/>
    </Canvas>

    <Style x:Key="SettingsIconStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource SettingsIconVisualBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
    </Style>

    <Style x:Key="AboutIconStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource AboutIconVisualBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
    </Style>

    <Style x:Key="UpdateFoundIconStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource UpdateFoundIconVisualBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
    </Style>

    <Style x:Key="NotificationsIconStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource NoNotificationsVisualBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
    </Style>

    <Style x:Key="NewNotificationIconStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource NewNotificationIndicatorBrush}" />
        <Setter Property="Height" Value="5" />
        <Setter Property="Width" Value="5" />
    </Style>

</ResourceDictionary>