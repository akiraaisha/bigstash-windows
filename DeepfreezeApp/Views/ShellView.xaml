<controls:MetroWindow x:Class="DeepfreezeApp.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:DeepfreezeApp"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Title="BigStash"
        TitleCaps="False"
        Icon="..\bigstash_windows_icon.ico"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        GlowBrush="{DynamicResource GrayBrush7}"
        Style="{DynamicResource MyCleanWindowStyle}"
        Height="600"
        MinHeight="600"
        Width="550"
        MinWidth="550"
        SaveWindowPosition="True"
        IconEdgeMode="Aliased"
        >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DeepfreezeApp;component/Styles/Clean.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MyCleanWindowStyle" TargetType="{x:Type controls:MetroWindow}" BasedOn="{StaticResource CleanWindowStyleKey}" />
            
            <local:InvertBool x:Key="InvertBoolConverter" />
            <local:BoolToVisibility x:Key="BoolToVisibilityConverter" />
            <local:ValueConverterGroup x:Key="InvertBoolToVisibilityConverter">
                <local:InvertBool />
                <local:BoolToVisibility />
            </local:ValueConverterGroup>
            <local:ValueConverterGroup x:Key="EmptyStringToInvertBoolToVisibilityConverter">
                <local:EmptyStringToBool />
                <local:InvertBool />
                <local:BoolToVisibility />
            </local:ValueConverterGroup>
            <local:BindingProxy x:Key="BindingProxy" Data="{Binding}" />

            <VisualBrush x:Key="SettingsIconVisualBrush" 
                         Stretch="Uniform"
                         Visual="{StaticResource appbar_settings}" 
                         />
            
            <VisualBrush x:Key="AboutIconVisualBrush" 
                         Stretch="Uniform"
                         Visual="{StaticResource appbar_information}" 
                         />

            <VisualBrush x:Key="UpdateFoundIconVisualBrush" 
                         Stretch="Uniform"
                         Visual="{StaticResource appbar_arrow_up}" 
                         />
            
            <VisualBrush x:Key="NoNotificationsVisualBrush"
                         Stretch="Uniform"
                         Visual="{StaticResource appbar_flag}"
                         />

            <Style x:Key="SettingsIconStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{StaticResource SettingsIconVisualBrush}" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Width" Value="15" />
            </Style>
            
            <Style x:Key="AboutIconStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{StaticResource AboutIconVisualBrush}" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Width" Value="15" />
            </Style>

            <Style x:Key="UpdateFoundIconStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{StaticResource UpdateFoundIconVisualBrush}" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Width" Value="15" />
            </Style>
            
            <Style x:Key="NotificationsIconStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{StaticResource NoNotificationsVisualBrush}" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Width" Value="15" />
            </Style>

        </ResourceDictionary>
    </Window.Resources>
    
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>

            <Button ToolTip="{Binding UpdateFoundButtonTooltipText}" 
                    FontFamily="Segoe UI Symbol"
                    FontSize="16"
                    Style="{DynamicResource MetroWindowButtonStyle}"
                    cal:Message.Attach="ToggleAboutFlyout"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                    Visibility="{Binding ShowRestartNeeded, Converter={StaticResource BoolToVisibilityConverter}}"
                    >

                <Rectangle Style="{StaticResource UpdateFoundIconStyle}" />

            </Button>

            <Button ToolTip="{Binding NotificationsHeader}" 
                    FontFamily="Segoe UI Symbol"
                    FontSize="16"
                    Style="{DynamicResource MetroWindowButtonStyle}"
                    cal:Message.Attach="ToggleNotificationsFlyout"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                    Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVisibilityConverter}}"
                    >

                <Rectangle Style="{StaticResource NotificationsIconStyle}" />

            </Button>

            <Button ToolTip="{Binding PreferencesHeader}" 
                    FontFamily="Segoe UI Symbol"
                    FontSize="16"
                    Style="{DynamicResource MetroWindowButtonStyle}"
                    cal:Message.Attach="TogglePreferencesFlyout"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                    Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVisibilityConverter}}"
                    >
                
                <Rectangle Style="{StaticResource SettingsIconStyle}" />
                
            </Button>

            <Button ToolTip="{Binding AboutButtonTooltip}" 
                    FontFamily="Segoe UI Symbol"
                    FontSize="16"
                    Style="{DynamicResource MetroWindowButtonStyle}"
                    cal:Message.Attach="ToggleAboutFlyout"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                    Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVisibilityConverter}}"
                    >
                
                    <Rectangle Style="{StaticResource AboutIconStyle}" />

            </Button>
            
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl x:Name="Flytouts" >
            
            <controls:Flyout x:Name="PreferencesFlyout" 
                             Header="{Binding PreferencesHeader}"
                             Position="Right" IsOpen="{Binding IsPreferencesFlyoutOpen}"
                             IsModal="True"
                             Theme="Adapt"
                             >

                <controls:MetroContentControl cal:View.Model="{Binding PreferencesVM}" />

            </controls:Flyout>

            <controls:Flyout 
                x:Name="AboutFlyout" 
                Header="{Binding AboutHeader}"
                Position="Right" IsOpen="{Binding IsAboutFlyoutOpen}"
                IsModal="True"
                Theme="Adapt"
                >

                <controls:MetroContentControl cal:View.Model="{Binding AboutVM}" />

            </controls:Flyout>

            <controls:Flyout 
                x:Name="NotificationsFlyout" 
                Header="{Binding NotificationsHeader}"
                Position="Right" IsOpen="{Binding IsNotificationsFlyoutOpen}"
                IsModal="True"
                Theme="Adapt"
                >

                <controls:MetroContentControl cal:View.Model="{Binding NotificationsVM}" />

            </controls:Flyout>

        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid Margin="0 0 0 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <tb:TaskbarIcon x:Name="DFTrayIcon" 
                        IconSource="/bigstash_windows_icon.ico"
                        ToolTipText="BigStash for Windows"
                        MenuActivation="RightClick"
                        cal:Message.Attach="[Event TrayLeftMouseUp] = [Action ShowShellWindow()]"
                        >

            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{Binding Data.PreferencesHeader, Source={StaticResource BindingProxy}}"
                              cal:Message.Attach="[Event Click] = [Action ShowPreferences()]"
                              Visibility="{Binding Data.IsLoggedIn, Source={StaticResource BindingProxy}, Converter={StaticResource BoolToVisibilityConverter}}"
                              />
                    <MenuItem Header="{Binding Data.ExitHeader, Source={StaticResource BindingProxy}}" 
                              cal:Message.Attach="[Event Click] = [Action ExitApplication()]"
                              />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>

        </tb:TaskbarIcon>

        <StackPanel Background="FloralWhite">
            
            <TextBlock Text="Looks like you aren't connected to the internet. Verify that your internet connection is working properly."
                               TextWrapping="Wrap"
                               Visibility="{Binding IsInternetConnected, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Top"
                               Background="FloralWhite"
                               TextAlignment="Center"
                               FontSize="16"
                               Margin="0 5 0 5"
                               />
        </StackPanel>
        
        <Grid Grid.Row="1">

            <TextBlock x:Name="ErrorMessage"
                   Foreground="Red"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   TextWrapping="Wrap"
                   Visibility="{Binding ErrorMessage, Converter={StaticResource EmptyStringToInvertBoolToVisibilityConverter}}"
                   />

            <Grid Visibility="{Binding HasError, Converter={StaticResource InvertBoolToVisibilityConverter}}">

                <WrapPanel HorizontalAlignment="Center" 
                   VerticalAlignment="Center"
                   Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"
                   >

                    <Label Content="{Binding BusyMessage}" />

                    <controls:ProgressRing IsActive="{Binding IsBusy}" 
                                   Width="20" 
                                   Height="20" 
                                   />

                </WrapPanel>

                <StackPanel Visibility="{Binding IsLoggedIn, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                            VerticalAlignment="Center"
                            >

                    <ContentControl cal:View.Model="{Binding LoginVM}" />

                </StackPanel>

                <DockPanel DockPanel.Dock="Top" Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVisibilityConverter}}">

                    <ContentControl cal:View.Model="{Binding ArchiveVM}"
                            DockPanel.Dock="Top"
                            />

                    <ScrollViewer DockPanel.Dock="Top"
                          VerticalScrollBarVisibility="Auto"
                          >

                        <ContentControl cal:View.Model="{Binding UploadManagerVM}" />

                    </ScrollViewer>

                </DockPanel>

            </Grid>

        </Grid>

    </Grid>
    
</controls:MetroWindow>
